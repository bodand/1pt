<div class="mx-4 w-full flex flex-col">
  <div class="flex flex-row gap-1">
    <h1 class="mb-8 lg:mb-4 text-4xl"><%= t 'events.name' %></h1>
    <h1 class="mb-8 lg:mb-4 text-4xl"><%= @event.name %></h1>
  </div>

  <div class="grid auto-cols-max gap-2">
    <% @entries.each_with_index { |entry, i| %>
      <div class="text-xl mr-4 col-1">
        <%= entry[:date] %>
      </div>
      <% [:ok, :maybe, :no].each_with_index { |typ, idx| %>
        <%= button_tag id: "btn_#{i}_#{typ}" \
          , class: "col-#{idx + 2} " + button_classes \
          , onclick: "change_state_of(#{i}, '#{typ}')" do %>
          <%= entry[typ].size %>
        <% end %>
      <% } %>
      <div style="grid-column: 2 / span 4;">
        <% [:ok, :maybe, :no].each { |typ| %>
          <div id="responses_<%= i %>_<%= typ %>" class="hidden flex flex-col">
            <% entry[typ].each { |resp| %>
              <div aria-details="<%= resp %> response from"><%= resp %></div>
            <% } %>
          </div>
        <% } %>
      </div>
    <% } %>
  </div>
</div>

<script type="application/javascript">
    const default_button_class = '<%= button_classes %>'
    const opened_button_class = "py-1.5 px-2.5 text-charcoal border border-solid border-charcoal"

    function change_state_of(entry, type) {
        const pack = get_response_pack(entry, type)
        const hidden = pack.classList.contains("hidden")
        update_element(pack, get_updater(hidden))
        const btn = get_response_button(entry, type)
        update_element(btn, get_button_setter(hidden))
    }

    function identity(arg) {
        return function () {
            return arg
        }
    }

    function get_button_setter(hidden) {
        if (hidden) return identity(opened_button_class)
        return identity(default_button_class)
    }

    function get_updater(hidden) {
        if (hidden) return show_via_class
        return hide_via_class;
    }

    function update_element(elem, fn) {
        elem.classList = fn(elem.classList)
    }

    function get_response_button(entry, type) {
        return document.getElementById(`btn_${entry}_${type}`)
    }
    function get_response_pack(entry, type) {
        return document.getElementById(`responses_${entry}_${type}`)
    }

    function hide_via_class(classes) {
        return ["hidden", ...classes].join(" ")
    }

    function show_via_class(classes) {
        return filter(classes, klass => klass !== "hidden").join(" ")
    }

    function filter(list, fn) {
        const ret = []
        for (let e of list) {
            if (fn(e)) ret.push(e)
        }
        return ret
    }
</script>
